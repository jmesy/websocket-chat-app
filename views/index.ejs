<!DOCTYPE html>
<html lang="en-US">
    <head>
        <title>WebSocket client</title>
        <meta charset="utf-8" />
    </head>
    <body>
        <h2>WebSocket Chat App</h2>
        <div>
            <div class="wrapper">
                <ul>
                    <!-- This is the component for incoming messages -->
                    <li class="component">
                        <div>
                            <div class="nickname"></div>
                            <div class="message"></div>
                        </div>
                    </li>
                    <!--  -->
                </ul>
            </div>
            <form id="chat-form">
                <ul>
                    <li>
                        <input
                            type="text"
                            id="message"
                            name="msg"
                            required
                            autofocus
                            autocomplete="off"
                        />
                    </li>
                    <li class="button">
                        <button type="button">Send</button>
                    </li>
                </ul>
            </form>
        </div>
        <!-- The script will move to a separate file. -->
        <script>
            const ws = new WebSocket('ws:localhost:8080');

            ws.onopen = (event) => {
                console.log('Connection to server opened.');
            };

            let formElement = document.forms.namedItem('chat-form');
            // const formElement=document.querySelector('#chat-form');//Use this instead but with a better selector.
            formElement.addEventListener('submit', (e) => {
                e.preventDefault(); //Is this necessary?
                const formData = new FormData(formElement);
                if (ws.readyState == WebSocket.OPEN) {
                    ws.send(
                        JSON.stringify({
                            message: formData.get('msg'),
                        })
                    );
                }
                formElement.reset(); //Either this or set empty string on the value.
                //messageField.focus()?
                //https://developer.mozilla.org/en-US/docs/Web/API/HTMLOrForeignElement/focus
                //Implement this if needed.
            });


            //Append incoming messages.
            const liElement=document.querySelector('.component');
            const appendMessage=function(data){
                liElementClone=liElement.cloneNode(true);
                for(const property in data.props){
                    liElementClone
                        .querySelector(`.component .${property}`)
                        .textContent=data.props[property];
                }
                document
                    .querySelector(`.wrapper ul`)
                    .appendChild(liElementClone);
            }

            ws.onmessage = (event) => {
                const data = JSON.parse(event.data);
                appendMessage(data);
            };
        </script>
    </body>
</html>
